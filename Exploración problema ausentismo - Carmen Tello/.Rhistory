labs(title = "Tasa de ausentismo en turnos de centros de salud de CABA",
x = "Tasa de ausentismo")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_clean %>%
rename(Efector = descripcion_ef) %>%
group_by(Efector,presente_al_turno) %>%
summarise(`Turnos otorgados`=n(),.groups = "drop") %>%
pivot_wider(names_from=presente_al_turno,values_from=`Turnos otorgados`) %>% mutate(Total = Si+No,
Ausentismo = paste(round(No/Total,3)*100,"%",sep="")) %>%
arrange(desc(`Total`)) %>% select(-c(Si,No)) %>%
kable(caption = "Cantidad de turnos otorgados por efector")
df_clean <- df_clean %>%
mutate(tipo_turno = ifelse(fecha_turno-fecha_que_se_otorgo>=days(1),"Programado","Espontáneo"))
df_clean %>%
calculate_tabulates(x="tipo_turno",
y="presente_al_turno",
add.percentage = "row",add.totals="row") %>% kable(caption = "Ausentismo según tipo de turno")
df_clean %>%
calculate_tabulates(x="tipo_turno",
y="presente_al_turno",
add.percentage = "row",add.totals="row") %>%
rename(`Tipo de turno / Presente al turno` = 1)
df_clean %>%
mutate(año_mes = format(fecha_turno,"%Y-%m")) %>%
group_by(año_mes,presente_al_turno,tipo_turno) %>%
summarise(n = n(),.groups = "drop") %>%
group_by(año_mes,tipo_turno) %>%
mutate(porc = n/sum(n,na.rm=T),
presente_al_turno = factor(presente_al_turno,levels=c("Si","No"))
) %>%
arrange(año_mes,presente_al_turno) %>%
ggplot() +
geom_bar(aes(año_mes,porc,fill=presente_al_turno),stat="identity",position = "fill") +
geom_text(aes(x=año_mes,y=porc,fill=presente_al_turno,
label=paste(round(porc,3)*100,"%",sep="")),
size=3, angle = 90,stat="identity",position = "fill",vjust=0) +
labs(title = "Tasa de ausentismo en turnos de centros de salud de CABA",
x = "Tasa de ausentismo")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(vars(tipo_turno),ncol=1)
df_clean %>%
mutate(año_mes = format(fecha_turno,"%Y-%m")) %>%
group_by(año_mes,presente_al_turno,tipo_turno) %>%
summarise(n = n(),.groups = "drop") %>%
group_by(año_mes,tipo_turno) %>%
mutate(porc = n/sum(n,na.rm=T),
presente_al_turno = factor(presente_al_turno,levels=c("Si","No"))
) %>%
arrange(año_mes,presente_al_turno) %>%
ggplot() +
geom_bar(aes(año_mes,porc,fill=presente_al_turno),stat="identity",position = "fill") +
geom_text(aes(x=año_mes,y=porc,fill=presente_al_turno,
label=paste(round(porc,3)*100,"%",sep="")),
size=3, angle = 90,stat="identity",position = "fill",vjust=0) +
labs(title = "Tasa de ausentismo por mes según tipo de turno",
fill = "Presente al turno", y = "",
x = "Tasa de ausentismo")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(vars(tipo_turno),ncol=1)
df_clean %>%
mutate(año_mes = format(fecha_turno,"%Y-%m")) %>%
group_by(año_mes,presente_al_turno) %>%
summarise(n = n(),.groups = "drop") %>%
group_by(año_mes) %>%
mutate(porc = n/sum(n,na.rm=T),
presente_al_turno = factor(presente_al_turno,levels=c("Si","No"))
) %>%
arrange(año_mes,presente_al_turno) %>%
ggplot() +
geom_bar(aes(año_mes,porc,fill=presente_al_turno),stat="identity",position = "fill") +
geom_text(aes(x=año_mes,y=porc,fill=presente_al_turno,
label=paste(round(porc,3)*100,"%",sep="")),
size=3, angle = 90,stat="identity",position = "fill",vjust=0) +
labs(title = "Tasa de ausentismo por mes en centros de salud",
x = "Tasa de ausentismo", y = "",fill = "Presente al turno")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_clean %>%
mutate(año_mes = format(fecha_turno,"%Y-%m")) %>%
group_by(año_mes,presente_al_turno,tipo_turno) %>%
summarise(n = n(),.groups = "drop") %>%
group_by(año_mes,tipo_turno) %>%
mutate(porc = n/sum(n,na.rm=T),
presente_al_turno = factor(presente_al_turno,levels=c("Si","No"))
) %>%
arrange(año_mes,presente_al_turno) %>%
ggplot() +
geom_bar(aes(año_mes,porc,fill=presente_al_turno),stat="identity",position = "fill") +
geom_text(aes(x=año_mes,y=porc,fill=presente_al_turno,
label=paste(round(porc,3)*100,"%",sep="")),
size=3, angle = 90,stat="identity",position = "fill",vjust=0) +
labs(title = "Tasa de ausentismo por mes según tipo de turno",
fill = "Presente al turno", y = "",
x = "")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(vars(tipo_turno),ncol=1)
df_clean %>%
mutate(año_mes = as.Date(paste(format(fecha_turno,"%Y-%m"),"-01",sep=""))) %>%
filter(tipo_turno == "Programado") %>%
group_by(año_mes,presente_al_turno,abreviatura_ef) %>%
summarise(n=n(),.groups = "drop") %>% group_by(año_mes,abreviatura_ef) %>%
mutate(porc = n/sum(n),
color = ifelse(porc <= 0.25,"Bajo",ifelse((porc <= 0.75 & porc > 0.25), "Medio", "Alto"))) %>% arrange(año_mes,abreviatura_ef,presente_al_turno) %>%
filter(presente_al_turno == "No") %>%
ggplot()+
geom_path(aes(x=año_mes,y=porc,color=color,group=1),
)+
scale_color_manual(values = c('Bajo' = 'darkgreen', 'Medio'='yellow', 'Alto' = 'darkred')) +
facet_wrap(~abreviatura_ef)+
theme_minimal()
df_clean %>%
mutate(año_mes = as.Date(paste(format(fecha_turno,"%Y-%m"),"-01",sep=""))) %>%
filter(tipo_turno == "Programado") %>%
group_by(año_mes,presente_al_turno,abreviatura_ef) %>%
summarise(n=n(),.groups = "drop") %>% group_by(año_mes,abreviatura_ef) %>%
mutate(porc = n/sum(n),
color = ifelse(porc <= 0.25,"Bajo",ifelse((porc <= 0.75 & porc > 0.25), "Medio", "Alto"))) %>% arrange(año_mes,abreviatura_ef,presente_al_turno) %>%
filter(presente_al_turno == "No") %>%
ggplot()+
geom_path(aes(x=año_mes,y=porc,color=color,group=1),
)+
scale_color_manual(values = c('Bajo' = 'darkgreen', 'Medio'='yellow', 'Alto' = 'darkred')) +
labs(title = "Porcentaje de ausentismo en el tiempo por efector", y = "", x = "", color = "Nivel")+
facet_wrap(~abreviatura_ef)+
theme_minimal()
ausentismo_ap <- df_clean %>%
group_by(abreviatura_ap,presente_al_turno) %>%
summarise(n = n(),.groups = "drop") %>%
group_by(abreviatura_ap) %>%
mutate(porc = n/sum(n,na.rm=T),
presente_al_turno = factor(presente_al_turno,levels=c("Si","No"))
) %>% ungroup() %>%
mutate(order = ifelse(presente_al_turno == 'No', porc, 0)) %>%
ungroup() %>%
mutate(abreviatura_ap = reorder(abreviatura_ap, order))
ggplot(ausentismo_ap) +
geom_bar(aes(abreviatura_ap,porc,fill=presente_al_turno),stat="identity",position = "fill") +
geom_text(aes(x=abreviatura_ap,y=porc,
label=paste(round(porc,3)*100,"%",sep="")),
size=3, #angle = 90,
stat="identity",position = "fill",vjust=0) +
labs(title = "Tasa de ausentismo en turnos de centros de salud de CABA, según área programática",
x = "Área programática",y="",fill = "Presente al turno")+
coord_flip() +
theme_minimal()
df_clean %>%
mutate(dia_que_se_otorgo = wday(fecha_turno,label=T,locale = Sys.getlocale("LC_TIME"),abbr=F)) %>%
group_by(dia_que_se_otorgo,presente_al_turno) %>%
summarise(n = n(),.groups = "drop") %>%
group_by(dia_que_se_otorgo) %>%
mutate(porc = n/sum(n,na.rm=T),
presente_al_turno = factor(presente_al_turno,levels=c("Si","No")),
dia_que_se_otorgo = factor(dia_que_se_otorgo,levels=c("lunes","martes","miércoles","jueves","viernes",
"sábado","domingo"))) %>%
arrange(dia_que_se_otorgo,presente_al_turno) %>%
ggplot() +
geom_bar(aes(dia_que_se_otorgo,porc,fill=presente_al_turno),stat="identity",position = "fill") +
geom_text(aes(x=dia_que_se_otorgo,y=porc,fill=presente_al_turno,
label=paste(round(porc,3)*100,"%","\n (",n,")",sep="")),
size=3,stat="identity",position = "fill",vjust=2) +
labs(title = "Porcentaje de ausentismo al turno otorgado, según día de la semana",
x = "Día de la semana",
y = "Porcentaje de ausentismo",
fill = "Presente al turno",
subtitle = "En gris, la población censal por grupo") +
theme_minimal()
tinytex::install_tinytex()
library(tidytext)
df %>%
group_by(id_paciente) %>%
summarise(n=n()) %>% pull(n) %>% table() %>%
prop.table() %>% data.frame() %>%
rename(`Cantidad de turnos`=1,
`Frecuencia` = 2) %>%
mutate(`Cantidad de turnos` = ifelse(`Cantidad de turnos` < 6, "Más de 5")) %>%
kable()
df %>%
group_by(id_paciente) %>%
summarise(n=n()) %>% pull(n) %>% table() %>%
prop.table() %>% data.frame() %>%
rename(`Cantidad de turnos`=1,
`Frecuencia` = 2) %>%
mutate(`Cantidad de turnos` = ifelse(`Cantidad de turnos` < 6,`Cantidad de turnos`, "Más de 5")) %>%
kable()
df %>%
group_by(id_paciente) %>%
summarise(n=n()) %>% pull(n) %>% table() %>%
prop.table() %>% data.frame() %>%
rename(`Cantidad de turnos`=1,
`Frecuencia` = 2) %>%
mutate(`Cantidad de turnos` = ifelse(`Cantidad de turnos` < "6",`Cantidad de turnos`, "Más de 5")) %>%
kable()
df %>%
group_by(id_paciente) %>%
summarise(n=n()) %>% pull(n) %>% table() %>%
prop.table() %>% data.frame() %>%
rename(`Cantidad de turnos`=1,
`Frecuencia` = 2) %>%
mutate(`Cantidad de turnos` = ifelse(`Cantidad de turnos` < 6,as.character(`Cantidad de turnos`), "Más de 5")) %>%
kable()
df %>%
group_by(id_paciente) %>%
summarise(n=n()) %>% pull(n) %>% table() %>%
prop.table() %>% data.frame() %>%
rename(`Cantidad de turnos`=1,
`Frecuencia` = 2)
df %>%
group_by(id_paciente) %>%
summarise(n=n()) %>% pull(n) %>% table() %>%
prop.table() %>% data.frame() %>%
rename(`Cantidad de turnos`=1,
`Frecuencia` = 2) %>%
mutate(`Cantidad de turnos` = ifelse(as.integer(`Cantidad de turnos`) < 6,
as.character(`Cantidad de turnos`),
"Más de 5")) %>%
kable()
df %>%
group_by(id_paciente) %>%
summarise(n=n()) %>% pull(n) %>% table() %>%
prop.table() %>% data.frame() %>%
rename(`Cantidad de turnos`=1,
`Frecuencia` = 2) %>%
mutate(`Cantidad de turnos` = ifelse(as.integer(`Cantidad de turnos`) < 6,
as.character(`Cantidad de turnos`),
"Más de 5")) %>%
group_by(`Cantidad de turnos`) %>% summarise(Frecuencia = sum(Frecuencia,na.rm=T))
df %>%
group_by(id_paciente) %>%
summarise(n=n()) %>% pull(n) %>% table() %>%
prop.table() %>% data.frame() %>%
rename(`Cantidad de turnos`=1,
`Frecuencia` = 2) %>%
mutate(`Cantidad de turnos` = ifelse(as.integer(`Cantidad de turnos`) < 6,
as.character(`Cantidad de turnos`),
"Más de 5")) %>%
group_by(`Cantidad de turnos`) %>% summarise(Frecuencia = sum(Frecuencia,na.rm=T)) %>%
kable()
df %>%
group_by(id_paciente) %>%
summarise(n=n()) %>% pull(n) %>% table() %>%
prop.table() %>% data.frame() %>%
rename(`Cantidad de turnos`=1,
`Frecuencia` = 2) %>%
mutate(`Cantidad de turnos` = ifelse(as.integer(`Cantidad de turnos`) < 6,
as.character(`Cantidad de turnos`),
"Más de 5")) %>%
group_by(`Cantidad de turnos`) %>% summarise(Frecuencia = paste(round(sum(Frecuencia,na.rm=T),3*100)),"%",sep="") %>%
kable()
id_duplicados
turnos_dup
valores_vacios <- sum(is.na(df))
valores_vacios
is.na(df)
col_vacias <- data.frame(sapply(df,function(x) sum(is.na(x)))) %>%
rename(vacios = 1) %>% filter(vacios > 0) %>%  rownames() %>% paste(collapse=", ")
turnos
ausentes
porc_ausentes <- paste(round(ausentes/turnos,3)*100,"%",sep="")
porc_ausentes
espontaneos <- nrow(df_clean[df_clean$tipo_turno == "Espontáneo",])
espontaneos
programado <- nrow(df_clean[df_clean$tipo_turno == "Programado",])
programado
df %>% filter(is.na(edad)==F) %>%
group_by(edad_agrupada,genero) %>%
summarise(poblacion = n_distinct(id_paciente)) %>%
left_join(censo %>% group_by(edad_agrupada,genero) %>%
summarise(poblacion_censo = sum(poblacion,na.rm=T))) %>%
mutate(porc = poblacion/poblacion_censo) %>%
mutate(porc = ifelse(genero == "M", porc*(-1),
porc),
poblacion = ifelse(genero == "M", poblacion*(-1),
poblacion),
poblacion_censo = ifelse(genero == "M", poblacion_censo*(-1),
poblacion_censo),
edad_agrupada = factor(edad_agrupada,levels(df$edad_agrupada))) %>%
ggplot() +
geom_bar(aes(edad_agrupada,poblacion_censo),fill="lightgrey",stat="identity") +
geom_bar(aes(edad_agrupada,poblacion,fill=genero),stat="identity") +
geom_text(aes(x=edad_agrupada,y=ifelse(poblacion<0,poblacion-10000,poblacion+10000),
label=paste(round(ifelse(porc<0,porc*(-1),porc),3)*100,"%",sep="")),
size=3) +
coord_flip()+
labs(title = "Porcentaje de la población de CABA que toma turnos en centros de salud, \n según edad y género",
x = "Edad agrupada",
y = "Población",
fill = "Género",
subtitle = "En gris, la población censal por grupo") +
theme_minimal()
df %>%
group_by(id_paciente) %>%
summarise(n=n()) %>% pull(n) %>% table() %>%
prop.table() %>% data.frame() %>%
rename(`Cantidad de turnos`=1,
`Frecuencia` = 2) %>%
mutate(`Cantidad de turnos` = ifelse(as.integer(`Cantidad de turnos`) < 6,
as.character(`Cantidad de turnos`),
"Más de 5")) %>%
group_by(`Cantidad de turnos`) %>% summarise(Frecuencia = paste(round(sum(Frecuencia,na.rm=T),3*100),"%",sep="")) %>%
kable()
df %>%
group_by(id_paciente) %>%
summarise(n=n()) %>% pull(n) %>% table() %>%
prop.table() %>% data.frame() %>%
rename(`Cantidad de turnos`=1,
`Frecuencia` = 2) %>%
mutate(`Cantidad de turnos` = ifelse(as.integer(`Cantidad de turnos`) < 6,
as.character(`Cantidad de turnos`),
"Más de 5")) %>%
group_by(`Cantidad de turnos`) %>% summarise(Frecuencia = paste(round(sum(Frecuencia,na.rm=T),3*100),"%",sep=""))
df %>%
group_by(id_paciente) %>%
summarise(n=n()) %>% pull(n) %>% table() %>%
prop.table() %>% data.frame() %>%
rename(`Cantidad de turnos`=1,
`Frecuencia` = 2) %>%
mutate(`Cantidad de turnos` = ifelse(as.integer(`Cantidad de turnos`) < 6,
as.character(`Cantidad de turnos`),
"Más de 5")) %>%
group_by(`Cantidad de turnos`) %>%
summarise(Frecuencia = paste(round(sum(Frecuencia,na.rm=T)*100,3),"%",sep="")) %>%
kable()
df %>%
group_by(id_paciente) %>%
summarise(n=n()) %>% pull(n) %>% table() %>%
prop.table() %>% data.frame() %>%
rename(`Cantidad de turnos`=1,
`Frecuencia` = 2) %>%
mutate(`Cantidad de turnos` = ifelse(as.integer(`Cantidad de turnos`) < 6,
as.character(`Cantidad de turnos`),
"Más de 5")) %>%
group_by(`Cantidad de turnos`) %>%
summarise(Frecuencia = paste(round(sum(Frecuencia,na.rm=T)*100,1),"%",sep="")) %>%
kable()
geo %>% select(nam,geometry) %>% left_join(
df %>%
group_by(departamento) %>%
summarise(poblacion = n_distinct(id_paciente),.groups = "drop") %>%
arrange(departamento)%>%
left_join(censo %>%
group_by(comuna) %>%
summarise(poblacion_censo = sum(poblacion,na.rm=T)),by=c("departamento"="comuna")),
by=c("nam"="departamento")) %>%
mutate(nam = factor(nam,levels=levels(df$departamento)),
porc = poblacion/poblacion_censo) %>%
ggplot() +
geom_sf(aes(fill=porc*100),color="white") +
geom_sf_label(aes(label = paste(sub("comuna ","C",nam),"\n",round(porc*100,1),"%",sep="")),size=3,alpha=0.5)+
labs(title = "Porcentaje de la población de CABA que toma turnos en centros de salud, \n según comuna",
fill = "Porcentaje de población") +
scale_fill_viridis_c() +
theme_void()
df_clean %>%
mutate(año_mes = format(fecha_turno,"%Y-%m")) %>%
group_by(año_mes,presente_al_turno) %>%
summarise(n = n(),.groups = "drop") %>%
group_by(año_mes) %>%
mutate(porc = n/sum(n,na.rm=T),
presente_al_turno = factor(presente_al_turno,levels=c("Si","No"))
) %>%
arrange(año_mes,presente_al_turno) %>%
ggplot() +
geom_bar(aes(año_mes,porc,fill=presente_al_turno),stat="identity",position = "fill") +
geom_text(aes(x=año_mes,y=porc,fill=presente_al_turno,
label=paste(round(porc,3)*100,"%",sep="")),
size=3, angle = 90,stat="identity",position = "fill",vjust=0) +
labs(title = "Tasa de ausentismo por mes en centros de salud",
y = "",fill = "Presente al turno")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_clean %>%
mutate(año_mes = format(fecha_turno,"%Y-%m")) %>%
group_by(año_mes,presente_al_turno) %>%
summarise(n = n(),.groups = "drop") %>%
group_by(año_mes) %>%
mutate(porc = n/sum(n,na.rm=T),
presente_al_turno = factor(presente_al_turno,levels=c("Si","No"))
) %>%
arrange(año_mes,presente_al_turno) %>%
ggplot() +
geom_bar(aes(año_mes,porc,fill=presente_al_turno),stat="identity",position = "fill") +
geom_text(aes(x=año_mes,y=porc,fill=presente_al_turno,
label=paste(round(porc,3)*100,"%",sep="")),
size=2, angle = 90,stat="identity",position = "fill",vjust=0) +
labs(title = "Tasa de ausentismo por mes en centros de salud",
x="", y = "",fill = "Presente al turno")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_clean %>%
mutate(año_mes = format(fecha_turno,"%Y-%m")) %>%
group_by(año_mes,presente_al_turno) %>%
summarise(n = n(),.groups = "drop") %>%
group_by(año_mes) %>%
mutate(porc = n/sum(n,na.rm=T),
presente_al_turno = factor(presente_al_turno,levels=c("Si","No"))
) %>%
arrange(año_mes,presente_al_turno) %>%
ggplot() +
geom_bar(aes(año_mes,porc,fill=presente_al_turno),stat="identity",position = "fill") +
geom_text(aes(x=año_mes,y=porc,fill=presente_al_turno,
label=paste(round(porc,3)*100,"%",sep="")),
size=2.5, angle = 90,stat="identity",position = "fill",vjust=0) +
labs(title = "Tasa de ausentismo por mes en centros de salud",
x="", y = "",fill = "Presente al turno")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_clean %>%
mutate(año_mes = format(fecha_turno,"%Y-%m")) %>%
group_by(año_mes,presente_al_turno,tipo_turno) %>%
summarise(n = n(),.groups = "drop") %>%
group_by(año_mes,tipo_turno) %>%
mutate(porc = n/sum(n,na.rm=T),
presente_al_turno = factor(presente_al_turno,levels=c("Si","No"))
) %>%
arrange(año_mes,presente_al_turno) %>%
ggplot() +
geom_bar(aes(año_mes,porc,fill=presente_al_turno),stat="identity",position = "fill") +
geom_text(aes(x=año_mes,y=porc,fill=presente_al_turno,
label=paste(round(porc,3)*100,"%",sep="")),
size=2.5, angle = 90,stat="identity",position = "fill",vjust=0) +
labs(title = "Tasa de ausentismo por mes según tipo de turno",
fill = "Presente al turno", y = "",
x = "")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(vars(tipo_turno),ncol=1)
df_clean %>%
rename(Efector = descripcion_ef) %>%
group_by(Efector,presente_al_turno) %>%
summarise(`Turnos otorgados`=n(),.groups = "drop") %>%
pivot_wider(names_from=presente_al_turno,values_from=`Turnos otorgados`) %>% mutate(Total = Si+No,
Ausentismo = paste(round(No/Total,3)*100,"%",sep="")) %>%
arrange(desc(`Total`)) %>% select(-c(Si,No)) %>%
kable(caption = "Cantidad de turnos otorgados por efector")
# Cargo las librerías con las que voy a trabajar
library(tidyverse)
library(sf)
library(readxl)
library(eph)
library(knitr)
library(tidytext)
options(scipen=99)
df_clean %>%
rename(Efector = descripcion_ef) %>%
group_by(Efector,presente_al_turno) %>%
summarise(`Turnos otorgados`=n(),.groups = "drop") %>%
pivot_wider(names_from=presente_al_turno,values_from=`Turnos otorgados`) %>% mutate(Total = Si+No,
Ausentismo = paste(round(No/Total,3)*100,"%",sep="")) %>%
arrange(desc(`Total`)) %>% select(-c(Si,No)) %>%
kable(caption = "Cantidad de turnos otorgados por efector")
df_clean %>%
rename(Efector = descripcion_ef) %>%
group_by(Efector,presente_al_turno) %>%
summarise(`Turnos otorgados`=n(),.groups = "drop")
df_clean %>%
rename(Efector = descripcion_ef) %>%
group_by(Efector,presente_al_turno) %>%
summarise(`Turnos otorgados`=n(),.groups = "drop") %>%
pivot_wider(names_from=presente_al_turno,values_from=`Turnos otorgados`)
df_clean %>%
rename(Efector = descripcion_ef) %>%
group_by(Efector,presente_al_turno) %>%
summarise(`Turnos otorgados`=n(),.groups = "drop") %>%
pivot_wider(names_from=presente_al_turno,values_from=`Turnos otorgados`) %>% mutate(Total = na.omit(Si)+na.omit(No),
Ausentismo = paste(round(No/Total,3)*100,"%",sep="")) %>%
arrange(desc(`Total`)) %>% select(-c(Si,No)) %>%
kable(caption = "Cantidad de turnos otorgados por efector")
df %>%
group_by(genero,presente_al_turno) %>%
summarise(n=n_distinct(id_paciente)) %>%
calculate_tabulates(x="genero",y="presente_al_turno",weights="n")
df %>%
group_by(genero,presente_al_turno) %>%
summarise(n=n_distinct(id_paciente)) %>%
calculate_tabulates(x="genero",y="presente_al_turno",weights="n",add.percentage = "row")
df %>%
group_by(genero,presente_al_turno) %>%
summarise(n=n_distinct(id_paciente)) %>%
calculate_tabulates(x="genero",y="presente_al_turno",weights="n",add.percentage = "row") %>%
kable(caption = "Ausentismo según género")
df %>%
group_by(genero,presente_al_turno) %>%
summarise(n=n_distinct(id_paciente)) %>%
calculate_tabulates(x="genero",y="presente_al_turno",weights="n",add.percentage = "row") %>%
rename(`Género / Presente al turno` = 1) %>%
kable(caption = "Ausentismo según género")
df %>%
group_by(genero,presente_al_turno) %>%
summarise(n=n_distinct(id_paciente)) %>%
calculate_tabulates(x="genero",y="presente_al_turno",weights="n",add.percentage = "row",affix_sign =T) %>%
rename(`Género / Presente al turno` = 1) %>%
kable(caption = "Ausentismo según género")
df %>%
filter(edad >= 18 %>% )
df %>%
filter(edad >= 18) %>%
group_by(genero,presente_al_turno) %>%
summarise(n=n_distinct(id_paciente)) %>%
calculate_tabulates(x="genero",y="presente_al_turno",weights="n",add.percentage = "row",affix_sign =T) %>%
rename(`Género / Presente al turno` = 1) %>%
kable(caption = "Ausentismo según género")
df %>%
filter(edad <= 18) %>%
group_by(genero,presente_al_turno) %>%
summarise(n=n_distinct(id_paciente)) %>%
calculate_tabulates(x="genero",y="presente_al_turno",weights="n",add.percentage = "row",affix_sign =T) %>%
rename(`Género / Presente al turno` = 1) %>%
kable(caption = "Ausentismo según género")
